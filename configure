#!/bin/bash

configure()
{
	command declare base
	command declare module
	command declare -a modules

	base="$(command dirname ${BASH_SOURCE[0]})"
	modules=("${@}")

	if command test -z "${modules}"
	then
		for module in "${base}/modules"/*/
		do
			module="$(basename ${module})"
			modules+=(${module})
		done
	fi

	for module in "${modules[@]}"
	do
		if command test ! -d "${base}/modules/${module}"
		then
			command echo "Module ${module} not found"
			command continue
		fi

		command echo "Module: ${module}"

		module="${base}/modules/${module}"

		command unset -f pre
		command unset -f post

		if command test -r "${module}/configure.sh"
		then
			command echo "	Sourcing module configuration script"
			command source "${module}/configure.sh"
		fi

		if command hash "pre" > "/dev/null" 2>&1
		then
			command echo "	Running pre-configuration hooks"
			pre >> "${module}/configure.log"
		fi

		if command test -d "${module}/home"
		then
			command echo "	Copying user files"
			command cp -R "${module}/home/" "${HOME}" >> "${module}/configure.log"
		fi

		if command test -d "${module}/root"
		then
			command echo "	Copying system files"
			command sudo cp -R "${module}/root/" "/" >> "${module}/configure.log"
		fi

		if command hash "post" > "/dev/null" 2>&1
		then
			command echo "	Running post-configuration hooks"
			post >> "${module}/configure.log"
		fi
	done

	command unset -v base
	command unset -v module
	command unset -v modules
	command return 0
}

(configure "${@}")

command unset -f pre
command unset -f post
command unset -f configure
